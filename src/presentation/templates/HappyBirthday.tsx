"use client";
import * as React from "react";

import { Box, Text } from "@chakra-ui/react";
import { ParticleNetwork } from "./ParticleNetwork";
import useSnow from "./useSnow";

const HappyBirthday: React.FC<{ active: Boolean }> = ({ active }) => {
  const textContent = React.useRef([
    "Ch√∫c m·ª´ng sinh nh·∫≠t ng∆∞·ªùi con g√°i xinh ƒë·∫πp, Tr√∫c Linh!",
    "Sinh nh·∫≠t c·ªßa em kh√¥ng ch·ªâ l√† s·ª± k·ª∑ ni·ªám, m√† c√≤n l√† c∆° h·ªôi ƒë·ªÉ em nh√¨n",
    "l·∫°i nh·ªØng ch·∫∑ng ƒë∆∞·ªùng ƒë√£ qua v√† nh·∫≠n ra r·∫±ng em l√† m·ªôt ph·∫ßn quan tr·ªçng",
    "kh√¥ng th·ªÉ thi·∫øu b√™n nh·ªØng ng∆∞·ªùi th√¢n quanh em.",
    "Ch√∫c em ti·∫øp t·ª•c tr·∫£i nghi·ªám nh·ªØng ƒëi·ªÅu m·ªõi m·∫ª, t·ªèa s√°ng nh∆∞ √°nh ƒë√®n",
    "v√† lu√¥n gi·ªØ nguy√™n tinh th·∫ßn kh√°m ph√°. Cu·ªôc s·ªëng l√† m·ªôt cu·ªôc phi√™u",
    "l∆∞u, v√† hy v·ªçng s·∫Ω c√≥ ng∆∞·ªùi ƒëi c√πng em tr√™n m·ªçi con ƒë∆∞·ªùng, chia s·∫ª m·ªçi",
    "ni·ªÅm vui v√† th√°ch th·ª©c.",
    "Ch√∫c m·ª´ng sinh nh·∫≠t, ng∆∞·ªùi con g√°i ƒë·∫∑c bi·ªát! üéÅ‚ù§Ô∏è",
    "-- Riddle --",
  ]);

  const canvasRef = React.useRef<HTMLCanvasElement | null>(null);
  const canvasParentRef = React.useRef<HTMLDivElement | null>(null);
  const particleNetworkRef = React.useRef<ParticleNetwork>();
  const textContentWrapper = React.useRef<HTMLDivElement>(null);

  const { runSnow } = useSnow(canvasRef, particleNetworkRef);

  React.useEffect(() => {
    setTimeout(() => {
      if (!particleNetworkRef.current) {
        const canvas = canvasRef.current;
        const parent = canvasParentRef.current;
        if (!canvas || !parent) return;
        const options = {
          particleColor: "#FFFFFF",
          background: "#FFB6C1",
          interactive: true,
          velocity: 10.66, // Adjust as needed
          density: 10000, // Adjust as needed
        };

        particleNetworkRef.current = new ParticleNetwork(
          parent,
          canvas,
          options
        );
        runSnow();
        const ctx = canvas?.getContext("2d") as CanvasRenderingContext2D;
        const video = document.createElement("video");
        video.src = "/truc-linh/happy-birthday.mp4"; // Replace with the actual path to your video file
        video.autoplay = true;
        video.preload = "auto";
        video.loop = true;

        video.addEventListener("canplay", () => {
          video.play();
        });

        video.addEventListener("ended", () => {
          video.currentTime = 0;
          video.play();
        });


        const drawFrame = () => {
          ctx.drawImage(video, canvas.width / 2, 190, 640, 360);
          requestAnimationFrame(drawFrame);
        };

        video.addEventListener("play", drawFrame);
      }
    }, 0);
  }, [active, runSnow]);

  React.useEffect(() => {
    if (!textContentWrapper.current) {
      return;
    }
    const pElements = textContentWrapper.current.querySelectorAll("p");
    pElements.forEach((pElement, index) => {
      pElement.textContent = textContent.current[index + 1];
    });
  }, []);

  return (
    <>
      <Box
        width="100vw"
        height="calc(100vh - 68px)"
        ref={canvasParentRef}
        position="relative"
      >
        <canvas ref={canvasRef} />
      </Box>
      <Box
        position="absolute"
        top="250px"
        left="calc(10%)"
        zIndex={21}
        fontFamily="cursive"
        ref={textContentWrapper}
      >
        <Text fontSize="xl" color="#008000"></Text>
        <br />
        <Text fontSize="lg" color="#008000"></Text>
        <Text fontSize="lg" color="#008000"></Text>
        <Text fontSize="lg" color="#008000"></Text>
        <br />
        <Text fontSize="lg" color="#008000"></Text>
        <Text fontSize="lg" color="#008000"></Text>
        <Text fontSize="lg" color="#008000"></Text>
        <Text fontSize="lg" color="#008000"></Text>
        <br />
        <Text fontSize="lg" color="#008000"></Text>
        <br />
        <Text fontSize="lg" color="#008000"></Text>
      </Box>
    </>
  );
};

export default HappyBirthday;
